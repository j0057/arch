#!/bin/bash -e

# (1) set hostname
lines /etc/hostname "$INSTALL_HOSTNAME"

# (2) set timezone
_ ln -sf "/usr/share/zoneinfo/$INSTALL_TZNAME" /etc/localtime

# (3) generate locales
lines /etc/locale.gen "$INSTALL_LOCALE"
_ locale-gen

# (4) set locales
lines /etc/locale.conf "LANG=${INSTALL_LOCALE/ */}"

# (5) TODO: /etc/vconsole.conf

# (6a) configure network adapters
read -a intf_mac <<< $INSTALL_INTERFACES
for i in `seq 0 2 ${#intf_mac[*]}`; do
    let j=i+1
    echo "SUBSYSTEM==\"net\", ACTION==\"add\", ATTR{address}==\"${intf_mac[j]}\", NAME=\"${intf_mac[i]}\"" >> /etc/udev/rules.d/10-network.rules
done

# (6b) install netctl profiles
for profile in $INSTALL_NETCTL; do
    _ curl -s http://$INSTALL_HOST/netctl/$profile -o /etc/netctl/$profile
done

# (7) configure /etc/mkinitcpio.conf and generate initramfs
if [ $INSTALL_DISK_ENCRYPTION = luks ]; then
    _ sed -i 's/^FILES=""/FILES="$(find \/etc\/luks.keys -type f 2>\/dev\/null)"/' /etc/mkinitcpio.conf
    _ sed -i 's/^HOOKS="\(.*\)"$/HOOKS="\1 systemd sd-encrypt sd-lvm2"/' /etc/mkinitcpio.conf
fi
_ mkinitcpio -p linux
_ chmod -v 0600 /boot/*.img

# (8) set root password
_ chpasswd <<< "root:$INSTALL_PASSWORD"

# (9a) configure grub
if [ $INSTALL_DISK_ENCRYPTION = luks ]; then
    lines /etc/default/grub 'GRUB_ENABLE_CRYPTODISK=y'
fi
_ sed -i '/^#GRUB_COLOR_.*$/ s/^#//' /etc/default/grub
_ sed -i "/^GRUB_CMDLINE_LINUX_DEFAULT/ s!=\"quiet\"!=\"$INSTALL_GRUB_CMDLINE\"!" /etc/default/grub
_ grub-mkconfig -o /boot/grub/grub.cfg

# (9b) install grub
case $INSTALL_GRUB_FIRMWARE in
    bios) _ grub-install --target=i386-pc --recheck $INSTALL_DISK ;;
    uefi) _ grub-install --target=x86_64-efi --recheck --efi-directory=/boot/efi --bootloader-id="ArchLinux"
          _ mkdir -pv /boot/efi/EFI/boot
          _ cp -v /boot/efi/EFI/ArchLinux/grubx64.efi /boot/efi/EFI/boot/bootx64.efi ;;
esac

# enable services
for service in $INSTALL_SERVICES; do
    case "$service" in
        netctl@*.service) _ netctl enable $(sed 's/netctl@\(.*\)\.service/\1/' <<< "$service") ;;
        *.target)         _ systemctl set-default $service ;;
        *)                _ systemctl enable $service ;;
    esac
done

# install pip
if [ "$INSTALL_PYTHON27_PIP" = 1 ]; then
    _ curl -s "https://bootstrap.pypa.io/get-pip.py" -o /tmp/get-pip.py
    _ python2 /tmp/get-pip.py --user --no-cache-dir --disable-pip-version-check
    lines /etc/profile.d/local-bin.sh 'PATH=$PATH:$HOME/.local/bin'
fi

# run post-install function
if [ "$(type -t post_install)" = "function" ]; then
    post_install
fi
