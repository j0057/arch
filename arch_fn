#!/bin/bash

partition() {
    local i disk=$1 parttype=$2 partitions=(); shift 2
    for i in $(seq 1 $#); do partitions[i]="${!i}"; done
    partition-disk
    if [ $INSTALL_DISK_ENCRYPTION = luks ]; then
        _ mkdir -vp /tmp/luks.keys
        foreach-partition partition-luks-gen-key if-partition-is-luks
        foreach-partition partition-luks-encrypt if-partition-is-luks
        foreach-partition partition-luks-add-key if-partition-is-luks
        foreach-partition partition-luks-decrypt if-partition-is-luks
        foreach-partition partition-luks-crypttab if-partition-is-luks
    fi
    foreach-partition partition-format
    foreach-partition partition-mount
}

partition-disk() {
    local j
    _ sgdisk $disk --zap-all
    for j in `seq 1 ${#partitions[*]}`; do
        foreach-partition partition-create if-correct-partition
    done
    case $parttype in
        mbr) _ sgdisk $disk --gpttombr 1:2:3:4
             _ sgdisk $disk --print-mbr ;;
        gpt) _ sgdisk $disk --print ;;
    esac
}

partition-format() {
    case $fstype in
        swap) _ mkswap -L $label $dev ;;
        ext4) _ mkfs.ext4 -L $label $dev ;;
        vfat) _ mkfs.vfat -n $label $dev ;;
        -)    ;;
        *)    echo "$FUNCNAME: unkown fstype $fstype" >&2 ; exit 1 ;;
    esac
}

partition-mount() {
    case $fstype in
        swap) _ swapon -v LABEL=$label ;;
        -)    ;;
        *)    _ mkdir -vp /mnt$mountpoint
              _ mount -v LABEL=$label /mnt$mountpoint
              ;;
    esac
}

if-correct-partition() {
    test $j = $num
}

partition-create() {
    _ sgdisk $disk --new $num:$size --typecode $num:$typecode --change-name $num:$label --attributes $num:set:63
}

if-partition-is-luks() {
    test $encryption = luks
}

partition-luks-gen-key() {
    _ dd bs=1 count=32 if=/dev/random of=/tmp/luks.keys/$label.key
}

partition-luks-encrypt() {
    _ cryptsetup luksFormat -q -d /tmp/luks.keys/$label.key -s 512 $disk$num
}

partition-luks-add-key() {
    _ cryptsetup luksAddKey -q -d /tmp/luks.keys/$label.key $disk$num \
        <(echo -n "$INSTALL_PASSWORD")
}

partition-luks-decrypt() {
    _ cryptsetup luksOpen -q -d /tmp/luks.keys/$label.key $disk$num $label
}

partition-luks-crypttab() {
    lines /tmp/crypttab "$label $disk$num /etc/luks.keys/$label.key"
}

foreach-partition() {
    local fn=$1 cond=$2
    local i num size typecode label fstype mountpoint dev encryption
    for i in $(seq 1 ${#partitions[*]}); do
        read num size typecode label fstype mountpoint <<< "${partitions[i]}"
        for dev in /dev/mapper/$label /dev/disk/by-partlabel/$label $disk$num; do
            test -e $dev && break
        done
        encryption=$INSTALL_DISK_ENCRYPTION
        if [ $typecode = ef00 -o $typecode = ef01 -o $typecode = fe02 ]; then
            encryption=none
        fi
        test -z "$cond" && $fn || { test $cond && $fn ; }
    done
}

_() {
    echo -en "\n\e[1;32m$@\e[0;0m\n\n" 1>&2
    "$@"
}

lines() {
    local target="$1"
    echo -en "\n\e[1;32mconfiguring $target\e[0;0m\n\n" 1>&2
    for i in $(seq 2 ${#}); do
        echo "${!i}" >> "$target"
    done
}

for fn in `declare -f | grep '^[a-zA-Z0-9_-]* () $' | cut -d \  -f 1`; do
    export -f $fn
done
