#!/bin/bash

partition() {
    local disk=$1 parttype=$2
    shift 2
    local partitions=("$@")
    local if_encrypt='[[ !($typecode =~ ef0[0-2]) && $INSTALL_DISK_ENCRYPTION = luks ]]'
    partition_disk
    sleep 0.5; _ partprobe $disk; sleep 0.5
    if [ $INSTALL_DISK_ENCRYPTION = luks ]; then
        _ mkdir -vp /tmp/luks.keys
        foreach_partition partition_luks_gen_key "$if_encrypt"
        foreach_partition partition_luks_encrypt "$if_encrypt"
        foreach_partition partition_luks_add_key "$if_encrypt"
        foreach_partition partition_luks_crypttab "$if_encrypt"
        foreach_partition partition_luks_decrypt "$if_encrypt"
    fi
    foreach_partition partition_format
    foreach_partition partition_mount
}

partition_disk() {
    local j
    _ sgdisk $disk --zap-all
    for ((j=1; j<=${#partitions[*]}; j++)); do
        foreach_partition partition_create '[[ $num = $j ]]'
    done
    case $parttype in
        mbr) _ sgdisk $disk --gpttombr 1:2:3:4
             _ sgdisk $disk --print-mbr ;;
        gpt) _ sgdisk $disk --print ;;
    esac
}

partition_format() {
    case $fstype in
        swap) _ mkswap -L $label $dev ;;
        ext4) _ mkfs.ext4 -L $label $dev ;;
       btrfs) _ mkfs.btrfs -L $label -f $dev ;;
        vfat) _ mkfs.vfat -n $label $dev ;;
        -)    ;;
        *)    echo "$FUNCNAME: unkown fstype $fstype" >&2 ; exit 1 ;;
    esac
}

partition_mount() {
    case $fstype in
        swap) _ swapon -v $dev ;;
        -)    ;;
        *)    _ mkdir -vp /mnt$mountpoint
              _ mount -v $dev /mnt$mountpoint
              ;;
    esac
}

partition_create() {
    _ sgdisk $disk --new $num:$size --typecode $num:$typecode --change-name $num:$label --attributes $num:set:63
}

partition_luks_gen_key() {
    _ dd bs=1 count=32 if=/dev/random of=/tmp/luks.keys/$label.key
}

partition_luks_encrypt() {
    _ cryptsetup luksFormat -q -d /tmp/luks.keys/$label.key -s 512 $dev
}

partition_luks_add_key() {
    _ cryptsetup luksAddKey -q -d /tmp/luks.keys/$label.key $dev <(echo -n "$INSTALL_PASSWORD")
}

partition_luks_decrypt() {
    _ cryptsetup luksOpen -q -d /tmp/luks.keys/$label.key $dev $label
}

partition_luks_crypttab() {
    lines /tmp/crypttab "$label $dev /etc/luks.keys/$label.key"
}

foreach_partition() {
    local fn=$1 cond=$2
    local i num size typecode label fstype mountpoint dev encryption
    for ((i=0; i<${#partitions[*]}; i++)); do
        read num size typecode label fstype mountpoint <<< "${partitions[i]}"
        for dev in /dev/disk/by-label/$label /dev/mapper/$label \
                   /dev/disk/by-partlabel/$label $disk'p'$num $disk$num; do
            test -e $dev && break
        done
        if [ -z "$cond" ]; then
            $fn
        elif eval "$cond"; then
            $fn
        fi
    done
}

_() {
    echo -en "\n\e[1;32m$@\e[0;0m\n\n" 1>&2
    "$@"
}

lines() {
    local target="$1"
    echo -en "\n\e[1;32mconfiguring $target\e[0;0m\n\n" 1>&2
    for x in $(seq 2 ${#}); do
        echo "${!x}" >> "$target"
    done
}

for fn in `declare -f | grep '^[a-zA-Z0-9_-]* () $' | cut -d \  -f 1`; do
    export -f $fn
done
