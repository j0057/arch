#!/bin/bash

# strip whitespace from some variables
INSTALL_INTERFACES=$(sed 's/\s\+/ /g ; s/^\s*//' <<< "${INSTALL_INTERFACES//$'\n'/ }")
INSTALL_PACKAGES=$(sed 's/\s\+/ /g ; s/^\s*//' <<< "${INSTALL_PACKAGES//$'\n'/ }")
INSTALL_SERVICES=$(sed 's/\s\+/ /g ; s/^\s*//' <<< "${INSTALL_SERVICES//$'\n'/ }")
INSTALL_NETCTL=$(sed 's/\s\+/ /g ; s/^\s*//' <<< "${INSTALL_NETCTL//$'\n'/ }")

# override and export variables starting with INSTALL_*
for var in ${!INSTALL_*}; do
    read -p "${var}: " -e -i "${!var}" ${var} 0<&4
    export ${var}
done

# export functions
for func in configure_disk post_install; do
    if [ "$(type -t ${func})" = function ]; then
        export -f ${func}
    fi
done

# set some defaults if still necessary
export INSTALL_DISK_ENCRYPTION="${INSTALL_DISK_ENCRYPTION:-luks}"
export INSTALL_GRUB_DISK="${INSTALL_GRUB_DISK:-/dev/sda}"
export INSTALL_GRUB_CMDLINE="${INSTALL_GRUB_CMDLINE:-quiet}"


get() { curl -s http://${INSTALL_HOST}/$1; }

# actual stage0: load functions, run stage1 and stage2
source <(get arch_fn)
bash -e <(get arch_stage1)
arch-chroot /mnt bash -e <(get arch_stage2)

# unmount filesystems and swaps
umount -R /mnt
swapoff -a

# close device mapper stuff
if [ ${INSTALL_DISK_ENCRYPTION} = luks ]; then
    lsblk -P \
        | sed -rn '/TYPE="crypt"/ { s/^NAME="([^ ]*)" .*$/\1/ ; p }' \
        | xargs -n 1 cryptsetup close
fi
